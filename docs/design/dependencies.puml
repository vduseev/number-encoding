@startuml

class main as "encode.py" << (S,orchid) Main Script >>

class encoding_scheme_builder << (P,#FF7700) Package >> {
  +build_encoding()
  +remove_characters()
  .. private methods ..
  -_invert_given_mapping()
  -_map_words_to_numbers()
  -_encode_word_with_char_to_digit_mapping()
}

class phone_numbers_encoder << (P,#FF7700) Package >> {
  +encode_phone_numbers_file()
  .. private methods ..
  -_encode_phone_number()
  -_get_words_fitting_into_digit_string()
  -_is_last_char_digit()
}

class config as "encoder_config.ini" << (C,#00FFFF) Config >> {
  +MAPPING
  +IGNORED_CHARACTERS
}

note top of main
  **Main** starting script.
  - Reads arguments, if provided.
  - Builds encoding scheme and encodes a phone numbers file with it.
  - Prints the result to **stdout**.
end note

main --> config : reads
main --> phone_numbers_encoder : imports\n<b>encode_phone_numbers_file()</b>
main --> encoding_scheme_builder : imports\n<b>build_encoding()</b>
phone_numbers_encoder --> encoding_scheme_builder : imports\n<b>remove_characters()</b>

hide members
show config fields
show phone_numbers_encoder methods
show encoding_scheme_builder methods

@enduml
